<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="production" >
  <resultMap id="BaseResultMap" type="model.ProductionPojo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
    <result column="stock" property="stock" jdbcType="BIT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="model.ProductionPojoWithBLOBs" extends="BaseResultMap" >
    <result column="priceByPiece" property="pricebypiece" jdbcType="LONGVARCHAR" />
    <result column="priceByWeight" property="pricebyweight" jdbcType="LONGVARCHAR" />
    <result column="priceByBox" property="pricebybox" jdbcType="LONGVARCHAR" />
    <result column="picOne" property="picone" jdbcType="LONGVARBINARY" />
    <result column="picTwo" property="pictwo" jdbcType="LONGVARBINARY" />
    <result column="picThree" property="picthree" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, desc, stock
  </sql>
  <sql id="Blob_Column_List" >
    priceByPiece, priceByWeight, priceByBox, picOne, picTwo, picThree
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from production
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from production
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="model.ProductionPojoWithBLOBs" >
    insert into production (id, name, desc, 
      stock, priceByPiece, priceByWeight, 
      priceByBox, picOne, picTwo, 
      picThree)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, 
      #{stock,jdbcType=BIT}, #{pricebypiece,jdbcType=LONGVARCHAR}, #{pricebyweight,jdbcType=LONGVARCHAR}, 
      #{pricebybox,jdbcType=LONGVARCHAR}, #{picone,jdbcType=LONGVARBINARY}, #{pictwo,jdbcType=LONGVARBINARY}, 
      #{picthree,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="model.ProductionPojoWithBLOBs" >
    insert into production
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="desc != null" >
        desc,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="pricebypiece != null" >
        priceByPiece,
      </if>
      <if test="pricebyweight != null" >
        priceByWeight,
      </if>
      <if test="pricebybox != null" >
        priceByBox,
      </if>
      <if test="picone != null" >
        picOne,
      </if>
      <if test="pictwo != null" >
        picTwo,
      </if>
      <if test="picthree != null" >
        picThree,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=BIT},
      </if>
      <if test="pricebypiece != null" >
        #{pricebypiece,jdbcType=LONGVARCHAR},
      </if>
      <if test="pricebyweight != null" >
        #{pricebyweight,jdbcType=LONGVARCHAR},
      </if>
      <if test="pricebybox != null" >
        #{pricebybox,jdbcType=LONGVARCHAR},
      </if>
      <if test="picone != null" >
        #{picone,jdbcType=LONGVARBINARY},
      </if>
      <if test="pictwo != null" >
        #{pictwo,jdbcType=LONGVARBINARY},
      </if>
      <if test="picthree != null" >
        #{picthree,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
</mapper>